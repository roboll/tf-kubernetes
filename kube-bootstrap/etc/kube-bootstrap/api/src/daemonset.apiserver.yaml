kind: DaemonSet
apiVersion: extensions/v1beta1
metadata:
  name: apiserver
  namespace: kube-system
  labels:
    app: kubernetes
    component: apiserver
spec:
  template:
    metadata:
      labels:
        app: kubernetes
        component: apiserver
    spec:
      nodeSelector:
        role: controller
      hostNetwork: true
      containers:
        - name: vault-sidekick
          image: quay.io/roboll/vault-sidekick:v0.0.9.12
          command:
            - /bin/sh
            - -c
            - export IP=$(ifconfig eth0 | awk '/inet addr/{print substr($2,6)}');
              exec /vault-sidekick
                -logtostderr=true
                -ca-cert=/etc/ssl/vault/ca.pem
                -output=/etc/secrets/sidekick
                -cn=pki:${KUBE_PKI_MOUNT}/issue/apiserver:common_name="${KUBE_FQDN},alt_names=kubernetes|kubernetes.default.svc|kubernetes.default.svc.cluster.local",ip_sans=10.0.0.1,fmt=cert,file=kube
                -cn=pki:${ETCD_PKI_MOUNT}/issue/apiserver:common_name=controller,fmt=cert,file=etcd
          env:
            - name: VAULT_ADDR
              value: ${VAULT_ADDR}
            - name: VAULT_SIDEKICK_TOKEN_FILE
              value: /var/lib/vault/token
          volumeMounts:
            - name: secrets
              mountPath: /etc/secrets/sidekick
            - name: vault-ca
              mountPath: /etc/ssl/vault/ca.pem
              readOnly: true
            - name: vault-token
              mountPath: /var/lib/vault/token
              readOnly: true
        - name: apiserver
          image: ${HYPERKUBE}
          command:
            - /apiserver
            - --secure-port=443
            - --cloud-provider=aws
            - --allow-privileged=true
            - --runtime-config=api/all=true
            - --enable-swagger-ui=true
            - --authorization-mode=RBAC
            - --service-cluster-ip-range=10.0.0.0/16
            - --external-hostname=${KUBE_FQDN}
            - --etcd-quorum-read=true
            - --etcd-servers=${ETCD_NODES}
            - --etcd-cafile=/etc/secrets/sidekick/etcd.ca
            - --etcd-certfile=/etc/secrets/sidekick/etcd.crt
            - --etcd-keyfile=/etc/secrets/sidekick/etcd.key
            - --service-account-key-file=/etc/secrets/svc-acct/pubkey.pem
            - --client-ca-file=/etc/secrets/kube-ca/ca.pem
            - --kubelet-certificate-authority=/etc/secrets/kube-ca/ca.pem
            - --tls-cert-file=/etc/secrets/sidekick/kube.crt
            - --tls-private-key-file=/etc/secrets/sidekick/kube.key
            - --kubelet-client-certificate=/etc/secrets/sidekick/kube.crt
            - --kubelet-client-key=/etc/secrets/sidekick/kube.key
            - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota,DenyEscalatingExec,ServiceAccount
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: kube-ca
              mountPath: /etc/secrets/kube-ca
              readOnly: true
            - name: svc-acct-pubkey
              mountPath: /etc/secrets/svc-acct
              readOnly: true
            - name: secrets
              mountPath: /etc/secrets/sidekick
              readOnly: true
      volumes:
        - name: kube-ca
          secret:
            secretName: kube-ca
        - name: svc-acct-pubkey
          secret:
            secretName: svc-acct-pubkey
        - name: secrets
          emptyDir: {}
        - name: vault-ca
          hostPath:
            path: /etc/ssl/vault/ca.pem
        - name: vault-token
          hostPath:
            path: /var/lib/vault/token
