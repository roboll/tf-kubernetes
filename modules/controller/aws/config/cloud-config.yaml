#cloud-config
hostname: ${instance_name}.${domain}
coreos:
  update:
    reboot-strategy: off

  units:
    - name: vault-ssh.service
      command: start
      content: |
        [Service]
        Type=oneshot

        ExecStart=/usr/bin/docker pull ${vault_ssh_image}

    - name: dev-xvdb-format.service
      command: start
      content: |
        [Unit]
        Requires=dev-xvdb.device
        After=dev-xvdb.device

        Before=var-lib-etcd.mount
        ConditionPathExists=!/var/lib/etcd.formatted

        [Service]
        Type=oneshot
        ExecStart=/usr/sbin/wipefs -f /dev/xvdb
        ExecStart=/usr/sbin/mkfs.ext4 /dev/xvdb
        ExecStartPost=/bin/touch /var/lib/etcd.formatted

    - name: var-lib-etcd.mount
      command: start
      content: |
        [Unit]
        Requires=dev-xvdb-format.service
        After=dev-xvbd-format.service

        [Mount]
        What=/dev/xvdb
        Where=/var/lib/etcd
        Type=ext4

    - name: docker.service
      command: start
      drop-ins:
        - name: 99-mount-flags.conf
          content: |
            [Service]
            MountFlags=shared

    - name: kubelet.service
      command: start
      content: |
        [Unit]
        Requires=docker.service
        After=docker.service

        [Service]
        Restart=always
        RestartSec=10

        ExecStartPre=/usr/bin/mkdir -p /var/run/kubelet
        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests

        ExecStartPre=/opt/bin/kube-ca.sh
        ExecStartPre=/opt/bin/etcd-ca.sh

        ExecStartPre=/usr/bin/docker run --rm \
          --volume /etc/kube-bootstrap/env:/etc/kube-bootstrap/env \
          --volume /etc/kubernetes/manifests/:/etc/kubernetes/manifests/ \
          quay.io/roboll/kube-bootstrap:alpha /opt/bin/copy-cert-sidecar.sh

        ExecStartPre=/usr/bin/docker run --rm \
          --volume /etc/kube-bootstrap/env:/etc/kube-bootstrap/env \
          --volume /etc/kubernetes/manifests/:/etc/kubernetes/manifests/ \
          quay.io/roboll/kube-bootstrap:alpha /opt/bin/copy-bootstrap.sh

        ExecStart=/usr/bin/docker run \
          --net=host \
          --pid=host \
          --privileged=true \
          --volume=/:/rootfs/:ro \
          --volume=/sys/:/sys/:ro \
          --volume=/dev/:/dev/ \
          --volume=/var/run/:/var/run/:rw \
          --volume=/etc/kubernetes/:/etc/kubernetes/ \
          --volume=/var/lib/docker/:/var/lib/docker/:rw \
          --volume=/var/lib/kubelet/:/var/lib/kubelet/:shared \
          ${hyperkube}:${kube_version} \
            /kubelet \
              --require-kubeconfig=true \
              --kubeconfig=/var/lib/kubelet/kubeconfig \
              --pod-manifest-path=/etc/kubernetes/manifests \
              --lock-file=/var/run/kubelet/lock \
              --exit-on-lock-contention=true \
              --register-schedulable=false \
              --node-labels=role=controller \
              --allow-privileged=true --containerized=true --v=5

write_files:
  - path: /etc/ssl/vault/ca.pem
    permissions: 0600
    encoding: base64
    content: |
      ${vault_ca_cert_pem_b64}

  - path: /etc/vault/ssh.hcl
    permissions: 0600
    content: |
      allowed_roles = "*"
      vault_addr = "${vault_address}"
      ca_cert = "/etc/ssl/vault/ca.pem"

  - path: /opt/bin/kube-ca.sh
    permissions: 0700
    content: |
      #! /bin/bash
      [ -f /etc/ssl/kube/ca.pem ] || {
        mkdir -p /etc/ssl/kube/
        curl -o /etc/ssl/kube/ca.pem ${vault_address}/v1/${kube_pki_mount}/ca/pem
      }

  - path: /opt/bin/etcd-ca.sh
    permissions: 0700
    content: |
      #! /bin/bash
      [ -f /etc/ssl/etcd/ca.pem ] || {
        mkdir -p /etc/ssl/etcd/
        curl -o /etc/ssl/etcd/ca.pem ${vault_address}/v1/${etcd_pki_mount}/ca/pem
      }

  - path: /etc/kube-bootstrap/env
    permissions: 0600
    content: |
      export HYPERKUBE=${hyperkube}:${kube_version}
      export KUBE_FQDN=${kube_fqdn}
      export KUBE_CA=/etc/ssl/kube/ca.pem

      export ETCD_PEERS=${etcd_peers}
      export ETCD_NODES=${etcd_nodes}
      export ETCD_CA=/etc/ssl/etcd/ca.pem

      export VAULT_ADDR=${vault_address}
      export VAULT_AUTH_ROLE=${vault_instance_role}

      export ETCD_PKI_MOUNT=${etcd_pki_mount}
      export KUBE_PKI_MOUNT=${kube_pki_mount}

      export SVC_ACCT_PUBKEY=${service_account_pubkey}
      export SVC_ACCT_PRIVKEY=${service_account_privkey}

  - path: /var/lib/kubelet/kubeconfig
    permissions: 0700
    content: |
      kind: Config
      apiVersion: v1
      current-context: kube
      clusters:
        - name: kubernetes
          cluster:
            server: http://localhost:8080
      users:
        - name: user
      contexts:
        - name: kube
          context:
            cluster: kubernetes
            user: user
